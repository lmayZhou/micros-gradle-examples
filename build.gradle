// 项目编译
buildscript {
    // Maven资源库
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        mavenCentral()
    }
    // springboot gradle 插件配置
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 插件
plugins {
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springIOVersion}"
    id 'idea'
//    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}
// 所有项目
allprojects {
    // 版本管理
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'idea'
//    apply plugin: 'java'
    apply plugin: 'java-library'
    // 项目信息
    group = 'com.lmaye'
    version = '1.0.1-SNAPSHOT'
    // 编译版本
    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"
    // 编码
    def encoding = "UTF-8"
    compileJava.options.encoding = encoding
    compileTestJava.options.encoding = encoding
    // 解决Gradle编译时出现： 编码GBK的不可映射字符
    //[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = encoding
    }
    // Maven资源库
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    // 管理版本
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }
}
// 顶级不打Jar包
jar.enabled = false
// 项目描述
description = "Microservice Examples project for Spring Boot"
