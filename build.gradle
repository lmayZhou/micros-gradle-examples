buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        mavenCentral()
    }
    // springboot gradle 插件配置
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 所有项目
allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    // 版本管理
    apply plugin: 'io.spring.dependency-management'
    // 用于发布jar包到私服插件
    apply plugin: 'maven-publish'

    group = 'com.lmaye'
    version = '1.0.1-SNAPSHOT'
    // 编译版本
    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    // 解决Gradle编译时出现： 编码GBK的不可映射字符
//    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        // 私服地址
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    // 管理版本
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }

    // 打包源码
    /*task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }*/

    // 私服发布配置
    publishing {
        publications {
            maven(MavenPublication) {
                // 指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
                groupId = project.group
                artifactId = project.name
                version = project.version
                // TODO
                // 如果是war包填写components.web，如果是jar包填写components.java
//                from components.java
                //配置上传源码
                /*artifact sourceJar {
                    classifier "src"
                }*/
            }
        }
        repositories {
            maven {
                def releasesUrl = "http://192.168.30.241:8081/repository/maven-releases/"
                def snapshotsUrl = "http://192.168.30.241:8081/repository/maven-snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
                credentials {
                    username = 'admin'
                    password = 'admin123'
                }
            }
        }
    }
}

// 不打Jar包
jar.enabled = false
description = "Microservice Examples project for Spring Boot"